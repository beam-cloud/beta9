#!/usr/bin/env python3
"""
Script to combine all Python files from src/beta9 into a single file.
This script recursively finds all .py files and combines them with clear separators.
"""

import os
import sys
from pathlib import Path
from typing import List, Tuple


def find_python_files(directory: str) -> List[Tuple[str, str]]:
    """
    Recursively find all Python files in the given directory.
    
    Args:
        directory: Path to the directory to search
        
    Returns:
        List of tuples containing (relative_path, absolute_path)
    """
    python_files = []
    base_path = Path(directory)
    
    for root, dirs, files in os.walk(directory):
        # Skip __pycache__ directories
        dirs[:] = [d for d in dirs if d != '__pycache__']
        
        for file in files:
            if file.endswith('.py'):
                file_path = Path(root) / file
                relative_path = file_path.relative_to(base_path)
                python_files.append((str(relative_path), str(file_path)))
    
    # Sort files to ensure consistent ordering
    python_files.sort()
    return python_files


def combine_files(files: List[Tuple[str, str]], output_file: str) -> None:
    """
    Combine all Python files into a single output file.
    
    Args:
        files: List of (relative_path, absolute_path) tuples
        output_file: Path to the output file
    """
    with open(output_file, 'w', encoding='utf-8') as outfile:
        # Write header
        outfile.write("# Combined Beta9 SDK Files\n")
        outfile.write("# This file contains all Python files from src/beta9\n")
        outfile.write("# Generated by combine_beta9_files.py\n\n")
        
        for relative_path, absolute_path in files:
            try:
                with open(absolute_path, 'r', encoding='utf-8') as infile:
                    content = infile.read()
                
                # Write file separator
                outfile.write(f"\n{'='*80}\n")
                outfile.write(f"# File: {relative_path}\n")
                outfile.write(f"# Path: {absolute_path}\n")
                outfile.write(f"{'='*80}\n\n")
                
                # Write file content
                outfile.write(content)
                
                # Add newline if file doesn't end with one
                if content and not content.endswith('\n'):
                    outfile.write('\n')
                    
            except Exception as e:
                print(f"Error reading {absolute_path}: {e}")
                outfile.write(f"# Error reading file: {relative_path}\n")
                outfile.write(f"# {str(e)}\n\n")


def main():
    """Main function to execute the file combination."""
    # Define paths
    beta9_dir = "src/beta9"
    output_file = "beta9_combined.py"
    
    # Check if beta9 directory exists
    if not os.path.exists(beta9_dir):
        print(f"Error: Directory '{beta9_dir}' not found!")
        print("Please run this script from the project root directory.")
        sys.exit(1)
    
    # Find all Python files
    print(f"Searching for Python files in {beta9_dir}...")
    python_files = find_python_files(beta9_dir)
    
    if not python_files:
        print("No Python files found!")
        sys.exit(1)
    
    print(f"Found {len(python_files)} Python files:")
    for relative_path, _ in python_files:
        print(f"  - {relative_path}")
    
    # Combine files
    print(f"\nCombining files into {output_file}...")
    combine_files(python_files, output_file)
    
    # Get file size
    file_size = os.path.getsize(output_file)
    file_size_mb = file_size / (1024 * 1024)
    
    print(f"Successfully created {output_file}")
    print(f"File size: {file_size:,} bytes ({file_size_mb:.2f} MB)")
    print(f"Combined {len(python_files)} files")


if __name__ == "__main__":
    main() 