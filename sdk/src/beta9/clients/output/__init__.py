# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: output.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from datetime import datetime
from typing import (
    TYPE_CHECKING,
    Dict,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class OutputSaveRequest(betterproto.Message):
    task_id: str = betterproto.string_field(1)
    filename: str = betterproto.string_field(2)
    content: bytes = betterproto.bytes_field(3)


@dataclass(eq=False, repr=False)
class OutputSaveResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)
    err_msg: str = betterproto.string_field(2)
    id: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class OutputStatRequest(betterproto.Message):
    id: str = betterproto.string_field(1)
    task_id: str = betterproto.string_field(2)
    filename: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class OutputStat(betterproto.Message):
    mode: str = betterproto.string_field(1)
    size: int = betterproto.int64_field(2)
    atime: datetime = betterproto.message_field(3)
    mtime: datetime = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class OutputStatResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)
    err_msg: str = betterproto.string_field(2)
    stat: "OutputStat" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class OutputSignUrlRequest(betterproto.Message):
    id: str = betterproto.string_field(1)
    task_id: str = betterproto.string_field(2)
    filename: str = betterproto.string_field(3)
    expires: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class OutputSignUrlResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)
    err_msg: str = betterproto.string_field(2)
    signed_url: str = betterproto.string_field(3)


class OutputServiceStub(betterproto.ServiceStub):
    async def output_save(
        self,
        output_save_request: "OutputSaveRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "OutputSaveResponse":
        return await self._unary_unary(
            "/output.OutputService/OutputSave",
            output_save_request,
            OutputSaveResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def output_stat(
        self,
        output_stat_request: "OutputStatRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "OutputStatResponse":
        return await self._unary_unary(
            "/output.OutputService/OutputStat",
            output_stat_request,
            OutputStatResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def output_sign_url(
        self,
        output_sign_url_request: "OutputSignUrlRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "OutputSignUrlResponse":
        return await self._unary_unary(
            "/output.OutputService/OutputSignURL",
            output_sign_url_request,
            OutputSignUrlResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class OutputServiceBase(ServiceBase):

    async def output_save(
        self, output_save_request: "OutputSaveRequest"
    ) -> "OutputSaveResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def output_stat(
        self, output_stat_request: "OutputStatRequest"
    ) -> "OutputStatResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def output_sign_url(
        self, output_sign_url_request: "OutputSignUrlRequest"
    ) -> "OutputSignUrlResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_output_save(
        self, stream: "grpclib.server.Stream[OutputSaveRequest, OutputSaveResponse]"
    ) -> None:
        request = await stream.recv_message()
        response = await self.output_save(request)
        await stream.send_message(response)

    async def __rpc_output_stat(
        self, stream: "grpclib.server.Stream[OutputStatRequest, OutputStatResponse]"
    ) -> None:
        request = await stream.recv_message()
        response = await self.output_stat(request)
        await stream.send_message(response)

    async def __rpc_output_sign_url(
        self,
        stream: "grpclib.server.Stream[OutputSignUrlRequest, OutputSignUrlResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.output_sign_url(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/output.OutputService/OutputSave": grpclib.const.Handler(
                self.__rpc_output_save,
                grpclib.const.Cardinality.UNARY_UNARY,
                OutputSaveRequest,
                OutputSaveResponse,
            ),
            "/output.OutputService/OutputStat": grpclib.const.Handler(
                self.__rpc_output_stat,
                grpclib.const.Cardinality.UNARY_UNARY,
                OutputStatRequest,
                OutputStatResponse,
            ),
            "/output.OutputService/OutputSignURL": grpclib.const.Handler(
                self.__rpc_output_sign_url,
                grpclib.const.Cardinality.UNARY_UNARY,
                OutputSignUrlRequest,
                OutputSignUrlResponse,
            ),
        }
