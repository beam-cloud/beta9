# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: bot.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    List,
    Optional,
)

import betterproto
import grpc
from betterproto.grpcstub.grpcio_client import SyncServiceStub
from betterproto.grpcstub.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpcstub.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class StartBotServeRequest(betterproto.Message):
    stub_id: str = betterproto.string_field(1)
    timeout: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class StartBotServeResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)
    session_id: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class BotServeKeepAliveRequest(betterproto.Message):
    stub_id: str = betterproto.string_field(1)
    timeout: int = betterproto.int32_field(2)
    session_id: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class BotServeKeepAliveResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class PopBotTaskRequest(betterproto.Message):
    stub_id: str = betterproto.string_field(1)
    session_id: str = betterproto.string_field(2)
    transition_name: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class PopBotTaskResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)
    markers: Dict[str, "PopBotTaskResponseMarkerList"] = betterproto.map_field(
        2, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PopBotTaskResponseMarkerList(betterproto.Message):
    markers: List["Marker"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MarkerField(betterproto.Message):
    field_name: str = betterproto.string_field(1)
    field_value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class Marker(betterproto.Message):
    location_name: str = betterproto.string_field(1)
    fields: List["MarkerField"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PushBotMarkerRequest(betterproto.Message):
    stub_id: str = betterproto.string_field(1)
    session_id: str = betterproto.string_field(2)
    location_name: str = betterproto.string_field(3)
    marker: bytes = betterproto.bytes_field(4)


@dataclass(eq=False, repr=False)
class PushBotMarkerResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)


class BotServiceStub(SyncServiceStub):
    def start_bot_serve(
        self, start_bot_serve_request: "StartBotServeRequest"
    ) -> "StartBotServeResponse":
        return self._unary_unary(
            "/bot.BotService/StartBotServe",
            StartBotServeRequest,
            StartBotServeResponse,
        )(start_bot_serve_request)

    def bot_serve_keep_alive(
        self, bot_serve_keep_alive_request: "BotServeKeepAliveRequest"
    ) -> "BotServeKeepAliveResponse":
        return self._unary_unary(
            "/bot.BotService/BotServeKeepAlive",
            BotServeKeepAliveRequest,
            BotServeKeepAliveResponse,
        )(bot_serve_keep_alive_request)

    def pop_bot_task(
        self, pop_bot_task_request: "PopBotTaskRequest"
    ) -> "PopBotTaskResponse":
        return self._unary_unary(
            "/bot.BotService/PopBotTask",
            PopBotTaskRequest,
            PopBotTaskResponse,
        )(pop_bot_task_request)

    def push_bot_marker(
        self, push_bot_marker_request: "PushBotMarkerRequest"
    ) -> "PushBotMarkerResponse":
        return self._unary_unary(
            "/bot.BotService/PushBotMarker",
            PushBotMarkerRequest,
            PushBotMarkerResponse,
        )(push_bot_marker_request)
