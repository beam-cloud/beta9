# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: container.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    AsyncIterator,
    Dict,
    Iterator,
    Optional,
)

import betterproto
import grpc
from betterproto.grpcstub.grpcio_client import SyncServiceStub
from betterproto.grpcstub.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpcstub.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class CommandExecutionRequest(betterproto.Message):
    stub_id: str = betterproto.string_field(1)
    command: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class CommandExecutionResponse(betterproto.Message):
    task_id: str = betterproto.string_field(1)
    output: str = betterproto.string_field(2)
    done: bool = betterproto.bool_field(3)
    exit_code: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class CreateTunnelRequest(betterproto.Message):
    container_id: str = betterproto.string_field(1)
    ttl: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class CreateTunnelResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)
    public_url: str = betterproto.string_field(2)


class ContainerServiceStub(SyncServiceStub):
    def execute_command(
        self, command_execution_request: "CommandExecutionRequest"
    ) -> Iterator["CommandExecutionResponse"]:
        for response in self._unary_stream(
            "/container.ContainerService/ExecuteCommand",
            CommandExecutionRequest,
            CommandExecutionResponse,
        )(command_execution_request):
            yield response

    def create_tunnel(
        self, create_tunnel_request: "CreateTunnelRequest"
    ) -> "CreateTunnelResponse":
        return self._unary_unary(
            "/container.ContainerService/CreateTunnel",
            CreateTunnelRequest,
            CreateTunnelResponse,
        )(create_tunnel_request)
