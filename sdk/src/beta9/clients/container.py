# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: container.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import AsyncGenerator

import betterproto
import grpclib


@dataclass
class CommandExecutionRequest(betterproto.Message):
    stub_id: str = betterproto.string_field(1)
    command: bytes = betterproto.bytes_field(2)


@dataclass
class CommandExecutionResponse(betterproto.Message):
    task_id: str = betterproto.string_field(1)
    output: str = betterproto.string_field(2)
    done: bool = betterproto.bool_field(3)
    exit_code: int = betterproto.int32_field(4)


@dataclass
class ContainerTaskStatusUpdateRequest(betterproto.Message):
    task_id: str = betterproto.string_field(1)
    status: str = betterproto.string_field(2)


@dataclass
class ContainerTaskStatusUpdateResponse(betterproto.Message):
    ok: bool = betterproto.bool_field(1)


class ContainerServiceStub(betterproto.ServiceStub):
    async def execute_command(
        self, *, stub_id: str = "", command: bytes = b""
    ) -> AsyncGenerator[CommandExecutionResponse, None]:
        request = CommandExecutionRequest()
        request.stub_id = stub_id
        request.command = command

        async for response in self._unary_stream(
            "/container.ContainerService/ExecuteCommand",
            request,
            CommandExecutionResponse,
        ):
            yield response

    async def update_task_status(
        self, *, task_id: str = "", status: str = ""
    ) -> ContainerTaskStatusUpdateResponse:
        request = ContainerTaskStatusUpdateRequest()
        request.task_id = task_id
        request.status = status

        return await self._unary_unary(
            "/container.ContainerService/UpdateTaskStatus",
            request,
            ContainerTaskStatusUpdateResponse,
        )
