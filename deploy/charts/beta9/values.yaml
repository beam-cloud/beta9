# -- See the common values.yaml for all the options you can set.
# https://github.com/bjw-s/helm-charts/blob/common-2.5.0/charts/library/common/values.yaml
global:
  labels: {}
  annotations: {}
  nameOverride: beta9

# -- Beta9's configuration.
# https://github.com/beam-cloud/beta9/blob/main/pkg/common/config.default.yaml
config:
  worker:
    imageRegistry: public.ecr.aws/n4e0e1y0
    imagePVCName: ""
  imageService:
    runner:
      baseImageRegistry: public.ecr.aws/n4e0e1y0

images:
  gateway:
    repository: public.ecr.aws/n4e0e1y0/beta9-gateway
    tag:        # Defaults to chart's app version
    pullPolicy: # Defaults to IfNotPresent
  proxy:
    repository: public.ecr.aws/n4e0e1y0/beta9-proxy
    tag:        # Defaults to chart's app version
    pullPolicy: # Defaults to IfNotPresent

controllers:
  gateway:
    annotations: {}
    labels: {}
    replicas: 1
    strategy: Recreate # Can be Recreate or RollingUpdate
    rollingUpdate:
      unavailable:
      surge:
    initContainers:
      wait-on-backends:
        image:
          repository: busybox
          tag: latest
        command:
        - sh
        - -c
        - |
          until nc -z postgresql 5432; do echo "Waiting on PostgreSQL..."; sleep 2; done;
          until nc -z redis-master 6379; do echo "Waiting on Redis..."; sleep 2; done;
          until nc -z juicefs-redis-master 6379; do echo "Waiting on Redis (JuiceFS)..."; sleep 2; done;
          echo "All systems ready!"
  proxy:
    enabled: false
    annotations: {}
    labels: {}
    replicas: 1
    strategy: Recreate # Can be Recreate or RollingUpdate
    rollingUpdate:
      unavailable:
      surge:
    initContainers:
      wait-on-backends:
        image:
          repository: busybox
          tag: latest
        command:
        - sh
        - -c
        - |
          until nc -z redis-master 6379; do echo "Waiting on Redis..."; sleep 2; done;
          echo "All systems ready!"

persistence:
  images:
    enabled: true
    type: persistentVolumeClaim
    size: 50Gi
    storageClass: local-path
    accessMode: ReadWriteOnce

service:
  gateway:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9090"
    labels: {}
    ports:
      grpc:
        port: 1993
        targetPort: 1993
        protocol: TCP
      http:
        primary: true
        port: 1994
        targetPort: 1994
        protocol: TCP
      metrics:
        port: 9090
        targetPort: 9090
        protocol: TCP
    type: ClusterIP

ingress:
  gateway:
    enabled: false
    annotations: {}
    labels: {}

serviceAccount:
  name: beta9
  annotations: {}
  labels: {}

# -- In-memory cache for container images.
# https://github.com/beam-cloud/blobcache/deploy/charts/blobcache/values.yaml
blobcache:
  enabled: false

# -- Needed by Gateway
redis:
  enabled: true
  nameOverride: redis
  fullnameOverride: redis
  architecture: standalone
  auth:
    enabled: false
  master:
    configuration: |
      activedefrag yes
      notify-keyspace-events AKE
    persistence:
      size: 1Gi

# -- Needed by Gateway
postgresql:
  enabled: true
  nameOverride: postgresql
  fullnameOverride: postgresql
  global:
    postgresql:
      auth:
        username: root
        password: password
        database: main
  primary:
    extendedConfiguration: |
      max_connections=400
      shared_buffers='400MB'
  volumePermissions:
    enabled: true
  persistence:
    enabled: true
    size: 1Gi

# -- Needed by Gateway's file system
juicefs-redis:
  enabled: true
  nameOverride: juicefs-redis
  fullnameOverride: juicefs-redis
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      size: 1Gi

# -- Enables deployment of victoria-metrics, grafana, and fluent-bit
metrics:
  enabled: false

grafana:
  nameOverride: grafana
  fullnameOverride: grafana
  datasources:
   datasources.yaml:
     apiVersion: 1
     datasources:
     - name: Victoria Metrics
       type: prometheus
       url: http://victoria-metrics-single:8428
       access: proxy
       isDefault: true

victoria-metrics-agent:
  nameOverride: victoria-metrics-agent
  fullnameOverride: victoria-metrics-agent
  remoteWriteUrls:
  - http://victoria-metrics-single:8428/api/v1/write
  extraScrapeConfigs:
  - job_name: beta9-pods
    metrics_path: /metrics
    scheme: http
    honor_labels: true
    scrape_timeout: 10s
    scrape_interval: 15s
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - beta9
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_label_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_container_port_number]
      action: keep
      regex: 9090

victoria-metrics-single:
  server:
    fullnameOverride: victoria-metrics-single

victoria-logs-single:
  server:
    fullnameOverride: victoria-logs-single

fluent-bit:
  nameOverride: fluent-bit
  fullnameOverride: fluent-bit
  image:
    repository: docker.io/fluent/fluent-bit
  envFrom:
  - secretRef:
      name: fluent-bit
  extraPorts:
  # -- The events server
  - name: tcp
    port: 9880
    containerPort: 9880
    protocol: TCP
  config:
    service: |
      [SERVICE]
          Flush        1
          Log_Level    info
          HTTP_Server  On
          HTTP_Listen  0.0.0.0
          HTTP_Port    2020
    customParsers: |
      [PARSER]
          Name        json-parser
          Format      json
          Time_Key    time
          Time_Format %Y-%m-%dT%H:%M:%SZ
          Time_Keep   On
    inputs: |
      [INPUT]
          Name             tail
          Tag              worker-logs
          Path             /var/log/worker/*.log
          Parser           json-parser
          Mem_Buf_Limit    100MB
          Skip_Long_Lines  Off
          Refresh_Interval 5
      [INPUT]
          Name   http
          Tag    events
          Listen 0.0.0.0
          Port   9880
    outputs: |
      [OUTPUT]
          Name  stdout
          Match *
      [OUTPUT]
          Name             http
          Match            *
          host             ${VICTORIA_LOGS_HOST}
          port             ${VICTORIA_LOGS_PORT}
          uri              /insert/jsonline?_stream_fields=stream&_msg_field=log&_time_field=date
          format           json_lines
          json_date_format iso8601
      [OUTPUT]
          Name            s3
          Match           worker-logs
          bucket          ${AWS_S3_BUCKET_NAME}
          endpoint        ${AWS_ENDPOINT_URL}
          use_put_object  On
          total_file_size 1M
          upload_timeout  1m
  volumeMounts:
  - name: config
    mountPath: /fluent-bit/etc/conf
  daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true

# -- Used to add any custom manifests
manifests:
  resources: []
  templates: []
