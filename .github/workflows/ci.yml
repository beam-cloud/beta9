name: Test

on: [push]


jobs:
  lint_and_test_python_sdk:
    defaults:
      run:
        working-directory: sdk

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Poetry
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Code formatting
        run: poetry run ruff format .

      # todo: remove exit-zero once ruff issues are fixed
      - name: Code linting
        run: poetry run ruff check .

      - name: Run tests
        env: 
          CI: true
        run: make tests

  lint_and_test_go_pkg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Tests
        run: |
          make test-pkg
  
  verify_protobufs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.1"
          repo-token: ${{ secrets.GITHUB_TOKEN }} 

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.9"
      
      - name: Install Protobuf Compilers
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
        
      - name: Install Python GRPC Package
        run: |
          python3 -m pip install -U "betterproto-beta9[compiler]" betterproto-beta9 grpcio
          sudo apt update
          sudo apt install protobuf-compiler -y
      
      - name: Verify Protobuf Codegen
        env:
          GO_PATH: ~/go
        run: |
          make verify-protocol