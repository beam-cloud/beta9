// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.25.1
// source: map.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MapSetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Ttl           int64                  `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapSetRequest) Reset() {
	*x = MapSetRequest{}
	mi := &file_map_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSetRequest) ProtoMessage() {}

func (x *MapSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSetRequest.ProtoReflect.Descriptor instead.
func (*MapSetRequest) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{0}
}

func (x *MapSetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MapSetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MapSetRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MapSetRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type MapSetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapSetResponse) Reset() {
	*x = MapSetResponse{}
	mi := &file_map_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSetResponse) ProtoMessage() {}

func (x *MapSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSetResponse.ProtoReflect.Descriptor instead.
func (*MapSetResponse) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{1}
}

func (x *MapSetResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *MapSetResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type MapGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapGetRequest) Reset() {
	*x = MapGetRequest{}
	mi := &file_map_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapGetRequest) ProtoMessage() {}

func (x *MapGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapGetRequest.ProtoReflect.Descriptor instead.
func (*MapGetRequest) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{2}
}

func (x *MapGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MapGetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MapGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapGetResponse) Reset() {
	*x = MapGetResponse{}
	mi := &file_map_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapGetResponse) ProtoMessage() {}

func (x *MapGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapGetResponse.ProtoReflect.Descriptor instead.
func (*MapGetResponse) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{3}
}

func (x *MapGetResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *MapGetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type MapDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapDeleteRequest) Reset() {
	*x = MapDeleteRequest{}
	mi := &file_map_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapDeleteRequest) ProtoMessage() {}

func (x *MapDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapDeleteRequest.ProtoReflect.Descriptor instead.
func (*MapDeleteRequest) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{4}
}

func (x *MapDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MapDeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MapDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapDeleteResponse) Reset() {
	*x = MapDeleteResponse{}
	mi := &file_map_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapDeleteResponse) ProtoMessage() {}

func (x *MapDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapDeleteResponse.ProtoReflect.Descriptor instead.
func (*MapDeleteResponse) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{5}
}

func (x *MapDeleteResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type MapCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapCountRequest) Reset() {
	*x = MapCountRequest{}
	mi := &file_map_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCountRequest) ProtoMessage() {}

func (x *MapCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCountRequest.ProtoReflect.Descriptor instead.
func (*MapCountRequest) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{6}
}

func (x *MapCountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MapCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Count         uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapCountResponse) Reset() {
	*x = MapCountResponse{}
	mi := &file_map_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCountResponse) ProtoMessage() {}

func (x *MapCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCountResponse.ProtoReflect.Descriptor instead.
func (*MapCountResponse) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{7}
}

func (x *MapCountResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *MapCountResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MapKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapKeysRequest) Reset() {
	*x = MapKeysRequest{}
	mi := &file_map_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapKeysRequest) ProtoMessage() {}

func (x *MapKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapKeysRequest.ProtoReflect.Descriptor instead.
func (*MapKeysRequest) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{8}
}

func (x *MapKeysRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MapKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Keys          []string               `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapKeysResponse) Reset() {
	*x = MapKeysResponse{}
	mi := &file_map_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapKeysResponse) ProtoMessage() {}

func (x *MapKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapKeysResponse.ProtoReflect.Descriptor instead.
func (*MapKeysResponse) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{9}
}

func (x *MapKeysResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *MapKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_map_proto protoreflect.FileDescriptor

var file_map_proto_rawDesc = string([]byte{
	0x0a, 0x09, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x61, 0x70,
	0x22, 0x5d, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22,
	0x39, 0x0a, 0x0e, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x35, 0x0a, 0x0d, 0x4d, 0x61,
	0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x36, 0x0a, 0x0e, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x4d, 0x61, 0x70,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x23, 0x0a, 0x11, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x25, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x38, 0x0a, 0x10, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x4d, 0x61, 0x70,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x35, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x32, 0xa7, 0x02, 0x0a, 0x0a, 0x4d, 0x61, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x74, 0x12,
	0x12, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x4d, 0x61,
	0x70, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x4d,
	0x61, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x6d,
	0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a,
	0x08, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x70, 0x2e,
	0x4d, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x4d,
	0x61, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x65, 0x61, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x65, 0x74, 0x61, 0x39, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_map_proto_rawDescOnce sync.Once
	file_map_proto_rawDescData []byte
)

func file_map_proto_rawDescGZIP() []byte {
	file_map_proto_rawDescOnce.Do(func() {
		file_map_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_map_proto_rawDesc), len(file_map_proto_rawDesc)))
	})
	return file_map_proto_rawDescData
}

var file_map_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_map_proto_goTypes = []any{
	(*MapSetRequest)(nil),     // 0: map.MapSetRequest
	(*MapSetResponse)(nil),    // 1: map.MapSetResponse
	(*MapGetRequest)(nil),     // 2: map.MapGetRequest
	(*MapGetResponse)(nil),    // 3: map.MapGetResponse
	(*MapDeleteRequest)(nil),  // 4: map.MapDeleteRequest
	(*MapDeleteResponse)(nil), // 5: map.MapDeleteResponse
	(*MapCountRequest)(nil),   // 6: map.MapCountRequest
	(*MapCountResponse)(nil),  // 7: map.MapCountResponse
	(*MapKeysRequest)(nil),    // 8: map.MapKeysRequest
	(*MapKeysResponse)(nil),   // 9: map.MapKeysResponse
}
var file_map_proto_depIdxs = []int32{
	0, // 0: map.MapService.MapSet:input_type -> map.MapSetRequest
	2, // 1: map.MapService.MapGet:input_type -> map.MapGetRequest
	4, // 2: map.MapService.MapDelete:input_type -> map.MapDeleteRequest
	6, // 3: map.MapService.MapCount:input_type -> map.MapCountRequest
	8, // 4: map.MapService.MapKeys:input_type -> map.MapKeysRequest
	1, // 5: map.MapService.MapSet:output_type -> map.MapSetResponse
	3, // 6: map.MapService.MapGet:output_type -> map.MapGetResponse
	5, // 7: map.MapService.MapDelete:output_type -> map.MapDeleteResponse
	7, // 8: map.MapService.MapCount:output_type -> map.MapCountResponse
	9, // 9: map.MapService.MapKeys:output_type -> map.MapKeysResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_map_proto_init() }
func file_map_proto_init() {
	if File_map_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_map_proto_rawDesc), len(file_map_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_map_proto_goTypes,
		DependencyIndexes: file_map_proto_depIdxs,
		MessageInfos:      file_map_proto_msgTypes,
	}.Build()
	File_map_proto = out.File
	file_map_proto_goTypes = nil
	file_map_proto_depIdxs = nil
}
