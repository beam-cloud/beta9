// Code generated by goa v3.19.1, DO NOT EDIT.
//
// ContainerRepository service
//
// Command:
// $ goa gen github.com/beam-cloud/beta9/pkg/repository/dsl -o proto/goa

package containerrepository

import (
	"context"
)

// Service is the ContainerRepository service interface.
type Service interface {
	// GetContainerState implements GetContainerState.
	GetContainerState(context.Context, *GetContainerStatePayload) (err error)
	// SetContainerState implements SetContainerState.
	SetContainerState(context.Context, *SetContainerStatePayload) (err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "ContainerRepository"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "ContainerRepository"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"GetContainerState", "SetContainerState"}

// A container state
type ContainerState struct {
}

// GetContainerStatePayload is the payload type of the ContainerRepository
// service GetContainerState method.
type GetContainerStatePayload struct {
	// ID of the container
	ContainerID string
}

// SetContainerStatePayload is the payload type of the ContainerRepository
// service SetContainerState method.
type SetContainerStatePayload struct {
	// ID of the container
	ContainerID *string
	// Container state information
	State *ContainerState
}
