// Code generated by goa v3.19.1, DO NOT EDIT.
//
// ContainerRepository gRPC client CLI support package
//
// Command:
// $ goa gen github.com/beam-cloud/beta9/pkg/repository/dsl -o proto/goa

package client

import (
	"encoding/json"
	"fmt"

	containerrepository "github.com/beam-cloud/beta9/proto/goa/gen/container_repository"
	container_repositorypb "github.com/beam-cloud/beta9/proto/goa/gen/grpc/container_repository/pb"
)

// BuildGetContainerStatePayload builds the payload for the ContainerRepository
// GetContainerState endpoint from CLI flags.
func BuildGetContainerStatePayload(containerRepositoryGetContainerStateMessage string) (*containerrepository.GetContainerStatePayload, error) {
	var err error
	var message container_repositorypb.GetContainerStateRequest
	{
		if containerRepositoryGetContainerStateMessage != "" {
			err = json.Unmarshal([]byte(containerRepositoryGetContainerStateMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"containerId\": \"Facilis doloremque eum.\"\n   }'")
			}
		}
	}
	v := &containerrepository.GetContainerStatePayload{
		ContainerID: message.ContainerId,
	}

	return v, nil
}

// BuildSetContainerStatePayload builds the payload for the ContainerRepository
// SetContainerState endpoint from CLI flags.
func BuildSetContainerStatePayload(containerRepositorySetContainerStateMessage string) (*containerrepository.SetContainerStatePayload, error) {
	var err error
	var message container_repositorypb.SetContainerStateRequest
	{
		if containerRepositorySetContainerStateMessage != "" {
			err = json.Unmarshal([]byte(containerRepositorySetContainerStateMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"containerId\": \"Vitae reiciendis quo est necessitatibus quia veritatis.\",\n      \"state\": {}\n   }'")
			}
		}
	}
	v := &containerrepository.SetContainerStatePayload{
		ContainerID: message.ContainerId,
	}
	if message.State != nil {
		v.State = protobufContainerRepositorypbContainerStateToContainerrepositoryContainerState(message.State)
	}

	return v, nil
}
