// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: taskqueue.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskQueuePutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StubId  string `protobuf:"bytes,1,opt,name=stub_id,json=stubId,proto3" json:"stub_id,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *TaskQueuePutRequest) Reset() {
	*x = TaskQueuePutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueuePutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueuePutRequest) ProtoMessage() {}

func (x *TaskQueuePutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueuePutRequest.ProtoReflect.Descriptor instead.
func (*TaskQueuePutRequest) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{0}
}

func (x *TaskQueuePutRequest) GetStubId() string {
	if x != nil {
		return x.StubId
	}
	return ""
}

func (x *TaskQueuePutRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskQueuePutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok     bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *TaskQueuePutResponse) Reset() {
	*x = TaskQueuePutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueuePutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueuePutResponse) ProtoMessage() {}

func (x *TaskQueuePutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueuePutResponse.ProtoReflect.Descriptor instead.
func (*TaskQueuePutResponse) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{1}
}

func (x *TaskQueuePutResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *TaskQueuePutResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type TaskQueuePopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StubId      string `protobuf:"bytes,1,opt,name=stub_id,json=stubId,proto3" json:"stub_id,omitempty"`
	ContainerId string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *TaskQueuePopRequest) Reset() {
	*x = TaskQueuePopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueuePopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueuePopRequest) ProtoMessage() {}

func (x *TaskQueuePopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueuePopRequest.ProtoReflect.Descriptor instead.
func (*TaskQueuePopRequest) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{2}
}

func (x *TaskQueuePopRequest) GetStubId() string {
	if x != nil {
		return x.StubId
	}
	return ""
}

func (x *TaskQueuePopRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type TaskQueuePopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskMsg []byte `protobuf:"bytes,2,opt,name=task_msg,json=taskMsg,proto3" json:"task_msg,omitempty"`
}

func (x *TaskQueuePopResponse) Reset() {
	*x = TaskQueuePopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueuePopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueuePopResponse) ProtoMessage() {}

func (x *TaskQueuePopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueuePopResponse.ProtoReflect.Descriptor instead.
func (*TaskQueuePopResponse) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{3}
}

func (x *TaskQueuePopResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *TaskQueuePopResponse) GetTaskMsg() []byte {
	if x != nil {
		return x.TaskMsg
	}
	return nil
}

type TaskQueueLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StubId string `protobuf:"bytes,1,opt,name=stub_id,json=stubId,proto3" json:"stub_id,omitempty"`
}

func (x *TaskQueueLengthRequest) Reset() {
	*x = TaskQueueLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueLengthRequest) ProtoMessage() {}

func (x *TaskQueueLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueLengthRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueLengthRequest) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{4}
}

func (x *TaskQueueLengthRequest) GetStubId() string {
	if x != nil {
		return x.StubId
	}
	return ""
}

type TaskQueueLengthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok     bool  `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Length int64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *TaskQueueLengthResponse) Reset() {
	*x = TaskQueueLengthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueLengthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueLengthResponse) ProtoMessage() {}

func (x *TaskQueueLengthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueLengthResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueLengthResponse) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{5}
}

func (x *TaskQueueLengthResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *TaskQueueLengthResponse) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type TaskQueueCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId            string  `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	StubId            string  `protobuf:"bytes,2,opt,name=stub_id,json=stubId,proto3" json:"stub_id,omitempty"`
	TaskDuration      float32 `protobuf:"fixed32,3,opt,name=task_duration,json=taskDuration,proto3" json:"task_duration,omitempty"`
	TaskStatus        string  `protobuf:"bytes,4,opt,name=task_status,json=taskStatus,proto3" json:"task_status,omitempty"`
	ContainerId       string  `protobuf:"bytes,5,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerHostname string  `protobuf:"bytes,6,opt,name=container_hostname,json=containerHostname,proto3" json:"container_hostname,omitempty"`
	KeepWarmSeconds   float32 `protobuf:"fixed32,7,opt,name=keep_warm_seconds,json=keepWarmSeconds,proto3" json:"keep_warm_seconds,omitempty"`
}

func (x *TaskQueueCompleteRequest) Reset() {
	*x = TaskQueueCompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueCompleteRequest) ProtoMessage() {}

func (x *TaskQueueCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueCompleteRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueCompleteRequest) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{6}
}

func (x *TaskQueueCompleteRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskQueueCompleteRequest) GetStubId() string {
	if x != nil {
		return x.StubId
	}
	return ""
}

func (x *TaskQueueCompleteRequest) GetTaskDuration() float32 {
	if x != nil {
		return x.TaskDuration
	}
	return 0
}

func (x *TaskQueueCompleteRequest) GetTaskStatus() string {
	if x != nil {
		return x.TaskStatus
	}
	return ""
}

func (x *TaskQueueCompleteRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *TaskQueueCompleteRequest) GetContainerHostname() string {
	if x != nil {
		return x.ContainerHostname
	}
	return ""
}

func (x *TaskQueueCompleteRequest) GetKeepWarmSeconds() float32 {
	if x != nil {
		return x.KeepWarmSeconds
	}
	return 0
}

type TaskQueueCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TaskQueueCompleteResponse) Reset() {
	*x = TaskQueueCompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueCompleteResponse) ProtoMessage() {}

func (x *TaskQueueCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueCompleteResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueCompleteResponse) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{7}
}

func (x *TaskQueueCompleteResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *TaskQueueCompleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TaskQueueMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId      string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	StubId      string `protobuf:"bytes,2,opt,name=stub_id,json=stubId,proto3" json:"stub_id,omitempty"`
	ContainerId string `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *TaskQueueMonitorRequest) Reset() {
	*x = TaskQueueMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueMonitorRequest) ProtoMessage() {}

func (x *TaskQueueMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueMonitorRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueMonitorRequest) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{8}
}

func (x *TaskQueueMonitorRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskQueueMonitorRequest) GetStubId() string {
	if x != nil {
		return x.StubId
	}
	return ""
}

func (x *TaskQueueMonitorRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type TaskQueueMonitorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Cancelled bool `protobuf:"varint,2,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	Complete  bool `protobuf:"varint,3,opt,name=complete,proto3" json:"complete,omitempty"`
	TimedOut  bool `protobuf:"varint,4,opt,name=timed_out,json=timedOut,proto3" json:"timed_out,omitempty"`
}

func (x *TaskQueueMonitorResponse) Reset() {
	*x = TaskQueueMonitorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueMonitorResponse) ProtoMessage() {}

func (x *TaskQueueMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueMonitorResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueMonitorResponse) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{9}
}

func (x *TaskQueueMonitorResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *TaskQueueMonitorResponse) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *TaskQueueMonitorResponse) GetComplete() bool {
	if x != nil {
		return x.Complete
	}
	return false
}

func (x *TaskQueueMonitorResponse) GetTimedOut() bool {
	if x != nil {
		return x.TimedOut
	}
	return false
}

type StartTaskQueueServeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StubId  string `protobuf:"bytes,1,opt,name=stub_id,json=stubId,proto3" json:"stub_id,omitempty"`
	Timeout int32  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *StartTaskQueueServeRequest) Reset() {
	*x = StartTaskQueueServeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskQueueServeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskQueueServeRequest) ProtoMessage() {}

func (x *StartTaskQueueServeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskQueueServeRequest.ProtoReflect.Descriptor instead.
func (*StartTaskQueueServeRequest) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{10}
}

func (x *StartTaskQueueServeRequest) GetStubId() string {
	if x != nil {
		return x.StubId
	}
	return ""
}

func (x *StartTaskQueueServeRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type StartTaskQueueServeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output   string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Done     bool   `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	ExitCode int32  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *StartTaskQueueServeResponse) Reset() {
	*x = StartTaskQueueServeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskQueueServeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskQueueServeResponse) ProtoMessage() {}

func (x *StartTaskQueueServeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskQueueServeResponse.ProtoReflect.Descriptor instead.
func (*StartTaskQueueServeResponse) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{11}
}

func (x *StartTaskQueueServeResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *StartTaskQueueServeResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *StartTaskQueueServeResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type StopTaskQueueServeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StubId string `protobuf:"bytes,1,opt,name=stub_id,json=stubId,proto3" json:"stub_id,omitempty"`
}

func (x *StopTaskQueueServeRequest) Reset() {
	*x = StopTaskQueueServeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskQueueServeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskQueueServeRequest) ProtoMessage() {}

func (x *StopTaskQueueServeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskQueueServeRequest.ProtoReflect.Descriptor instead.
func (*StopTaskQueueServeRequest) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{12}
}

func (x *StopTaskQueueServeRequest) GetStubId() string {
	if x != nil {
		return x.StubId
	}
	return ""
}

type StopTaskQueueServeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *StopTaskQueueServeResponse) Reset() {
	*x = StopTaskQueueServeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskQueueServeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskQueueServeResponse) ProtoMessage() {}

func (x *StopTaskQueueServeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskQueueServeResponse.ProtoReflect.Descriptor instead.
func (*StopTaskQueueServeResponse) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{13}
}

func (x *StopTaskQueueServeResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type TaskQueueServeKeepAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StubId  string `protobuf:"bytes,1,opt,name=stub_id,json=stubId,proto3" json:"stub_id,omitempty"`
	Timeout int32  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *TaskQueueServeKeepAliveRequest) Reset() {
	*x = TaskQueueServeKeepAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueServeKeepAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueServeKeepAliveRequest) ProtoMessage() {}

func (x *TaskQueueServeKeepAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueServeKeepAliveRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueServeKeepAliveRequest) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{14}
}

func (x *TaskQueueServeKeepAliveRequest) GetStubId() string {
	if x != nil {
		return x.StubId
	}
	return ""
}

func (x *TaskQueueServeKeepAliveRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type TaskQueueServeKeepAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *TaskQueueServeKeepAliveResponse) Reset() {
	*x = TaskQueueServeKeepAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taskqueue_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueServeKeepAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueServeKeepAliveResponse) ProtoMessage() {}

func (x *TaskQueueServeKeepAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taskqueue_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueServeKeepAliveResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueServeKeepAliveResponse) Descriptor() ([]byte, []int) {
	return file_taskqueue_proto_rawDescGZIP(), []int{15}
}

func (x *TaskQueueServeKeepAliveResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_taskqueue_proto protoreflect.FileDescriptor

var file_taskqueue_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x13,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x75, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3f, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x75, 0x62, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x14, 0x54, 0x61,
	0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x73, 0x67, 0x22, 0x31, 0x0a,
	0x16, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x75, 0x62, 0x49, 0x64,
	0x22, 0x41, 0x0a, 0x17, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x22, 0x90, 0x02, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x75,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x75, 0x62,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6b, 0x65,
	0x65, 0x70, 0x5f, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x57, 0x61, 0x72, 0x6d, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x19, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6e, 0x0a,
	0x17, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x75, 0x62, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x81, 0x01,
	0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x6f, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75,
	0x74, 0x22, 0x4f, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x75, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x66, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x19, 0x53, 0x74,
	0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x75, 0x62, 0x49, 0x64,
	0x22, 0x2c, 0x0a, 0x1a, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x53,
	0x0a, 0x1e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x75, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x22, 0x31, 0x0a, 0x1f, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0x98, 0x06, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x75, 0x74, 0x12, 0x1e, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x70, 0x12, 0x1e,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x60, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68,
	0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x63, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x12, 0x24,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x17, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x4b,
	0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x29, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x4b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x65, 0x61, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x65, 0x74, 0x61, 0x39,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_taskqueue_proto_rawDescOnce sync.Once
	file_taskqueue_proto_rawDescData = file_taskqueue_proto_rawDesc
)

func file_taskqueue_proto_rawDescGZIP() []byte {
	file_taskqueue_proto_rawDescOnce.Do(func() {
		file_taskqueue_proto_rawDescData = protoimpl.X.CompressGZIP(file_taskqueue_proto_rawDescData)
	})
	return file_taskqueue_proto_rawDescData
}

var file_taskqueue_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_taskqueue_proto_goTypes = []interface{}{
	(*TaskQueuePutRequest)(nil),             // 0: taskqueue.TaskQueuePutRequest
	(*TaskQueuePutResponse)(nil),            // 1: taskqueue.TaskQueuePutResponse
	(*TaskQueuePopRequest)(nil),             // 2: taskqueue.TaskQueuePopRequest
	(*TaskQueuePopResponse)(nil),            // 3: taskqueue.TaskQueuePopResponse
	(*TaskQueueLengthRequest)(nil),          // 4: taskqueue.TaskQueueLengthRequest
	(*TaskQueueLengthResponse)(nil),         // 5: taskqueue.TaskQueueLengthResponse
	(*TaskQueueCompleteRequest)(nil),        // 6: taskqueue.TaskQueueCompleteRequest
	(*TaskQueueCompleteResponse)(nil),       // 7: taskqueue.TaskQueueCompleteResponse
	(*TaskQueueMonitorRequest)(nil),         // 8: taskqueue.TaskQueueMonitorRequest
	(*TaskQueueMonitorResponse)(nil),        // 9: taskqueue.TaskQueueMonitorResponse
	(*StartTaskQueueServeRequest)(nil),      // 10: taskqueue.StartTaskQueueServeRequest
	(*StartTaskQueueServeResponse)(nil),     // 11: taskqueue.StartTaskQueueServeResponse
	(*StopTaskQueueServeRequest)(nil),       // 12: taskqueue.StopTaskQueueServeRequest
	(*StopTaskQueueServeResponse)(nil),      // 13: taskqueue.StopTaskQueueServeResponse
	(*TaskQueueServeKeepAliveRequest)(nil),  // 14: taskqueue.TaskQueueServeKeepAliveRequest
	(*TaskQueueServeKeepAliveResponse)(nil), // 15: taskqueue.TaskQueueServeKeepAliveResponse
}
var file_taskqueue_proto_depIdxs = []int32{
	0,  // 0: taskqueue.TaskQueueService.TaskQueuePut:input_type -> taskqueue.TaskQueuePutRequest
	2,  // 1: taskqueue.TaskQueueService.TaskQueuePop:input_type -> taskqueue.TaskQueuePopRequest
	8,  // 2: taskqueue.TaskQueueService.TaskQueueMonitor:input_type -> taskqueue.TaskQueueMonitorRequest
	6,  // 3: taskqueue.TaskQueueService.TaskQueueComplete:input_type -> taskqueue.TaskQueueCompleteRequest
	4,  // 4: taskqueue.TaskQueueService.TaskQueueLength:input_type -> taskqueue.TaskQueueLengthRequest
	10, // 5: taskqueue.TaskQueueService.StartTaskQueueServe:input_type -> taskqueue.StartTaskQueueServeRequest
	12, // 6: taskqueue.TaskQueueService.StopTaskQueueServe:input_type -> taskqueue.StopTaskQueueServeRequest
	14, // 7: taskqueue.TaskQueueService.TaskQueueServeKeepAlive:input_type -> taskqueue.TaskQueueServeKeepAliveRequest
	1,  // 8: taskqueue.TaskQueueService.TaskQueuePut:output_type -> taskqueue.TaskQueuePutResponse
	3,  // 9: taskqueue.TaskQueueService.TaskQueuePop:output_type -> taskqueue.TaskQueuePopResponse
	9,  // 10: taskqueue.TaskQueueService.TaskQueueMonitor:output_type -> taskqueue.TaskQueueMonitorResponse
	7,  // 11: taskqueue.TaskQueueService.TaskQueueComplete:output_type -> taskqueue.TaskQueueCompleteResponse
	5,  // 12: taskqueue.TaskQueueService.TaskQueueLength:output_type -> taskqueue.TaskQueueLengthResponse
	11, // 13: taskqueue.TaskQueueService.StartTaskQueueServe:output_type -> taskqueue.StartTaskQueueServeResponse
	13, // 14: taskqueue.TaskQueueService.StopTaskQueueServe:output_type -> taskqueue.StopTaskQueueServeResponse
	15, // 15: taskqueue.TaskQueueService.TaskQueueServeKeepAlive:output_type -> taskqueue.TaskQueueServeKeepAliveResponse
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_taskqueue_proto_init() }
func file_taskqueue_proto_init() {
	if File_taskqueue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_taskqueue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueuePutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueuePutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueuePopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueuePopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueLengthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueCompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueCompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueMonitorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskQueueServeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskQueueServeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskQueueServeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskQueueServeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueServeKeepAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taskqueue_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueServeKeepAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_taskqueue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_taskqueue_proto_goTypes,
		DependencyIndexes: file_taskqueue_proto_depIdxs,
		MessageInfos:      file_taskqueue_proto_msgTypes,
	}.Build()
	File_taskqueue_proto = out.File
	file_taskqueue_proto_rawDesc = nil
	file_taskqueue_proto_goTypes = nil
	file_taskqueue_proto_depIdxs = nil
}
