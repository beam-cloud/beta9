# syntax=docker/dockerfile:1.6
ARG BASE_STAGE=dev

FROM golang:1.21 AS golang

RUN apt-get update && apt-get install -y curl git


# skopeo
# ========================
FROM golang AS skopeo

WORKDIR /workspace

ENV CGO_ENABLED="0"  \
    DISABLE_DOCS="1" \
    GO_DYN_FLAGS=""  \
    BUILDTAGS="containers_image_openpgp"

RUN <<EOT
set -eux
git clone https://github.com/containers/skopeo.git .
make
make install
/usr/local/bin/skopeo --version
EOT


# runc
# ========================
FROM golang AS runc

WORKDIR /workspace

RUN apt-get install -y libseccomp-dev

RUN <<EOT
set -eux
git clone https://github.com/beam-cloud/runc.git .
make
make install
/usr/local/sbin/runc --version
EOT


# nvidia-container-toolkit
# ========================
FROM golang AS nvidia-container-toolkit

WORKDIR /workspace

RUN apt update && apt install -y build-essential

RUN <<EOT
git clone -b np/update --single-branch https://github.com/beam-cloud/nvidia-container-toolkit.git .
make build
make binaries
EOT


# beta9 worker
# ========================
FROM golang AS worker

WORKDIR /workspace

# Install mountpoint for s3
RUN apt-get install -y fuse libfuse-dev cmake clang git pkg-config
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN git clone --recurse-submodules https://github.com/awslabs/mountpoint-s3.git
RUN cd mountpoint-s3 && cargo build --release && cp target/release/mount-s3 /usr/bin/

COPY go.mod go.sum ./
RUN go mod download
COPY . .
RUN go build -o /usr/local/bin/worker ./cmd/worker/main.go


# final image
# ========================
FROM nvidia/cuda:12.3.1-base-ubuntu20.04 AS release
FROM release AS dev

FROM ${BASE_STAGE} AS final
ENV DEBIAN_FRONTEND="noninteractive"
WORKDIR /workspace

RUN apt-get update && \
    apt-get install -y curl gpg fuse libfuse-dev && \
    curl -fsSL https://download.opensuse.org/repositories/devel:/tools:/criu/xUbuntu_20.04/Release.key | gpg --dearmor -o /usr/share/keyrings/criu.gpg && \
    echo 'deb [signed-by=/usr/share/keyrings/criu.gpg] https://download.opensuse.org/repositories/devel:/tools:/criu/xUbuntu_20.04 /' > /etc/apt/sources.list.d/criu.list && \
    curl -fsSL https://nvidia.github.io/nvidia-container-runtime/gpgkey | apt-key add - && \
    curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu20.04/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list \
    curl -fsSL https://nvidia.github.io/nvidia-container-runtime/ubuntu20.04/nvidia-container-runtime.list | tee /etc/apt/sources.list.d/nvidia-container-runtime.list && \
    apt-get update

RUN curl -sSL https://d.juicefs.com/install | sh -
RUN curl -fsSL https://tailscale.com/install.sh | sh
RUN apt-get install -y --no-install-recommends criu nvidia-container-toolkit-base nvidia-container-toolkit


RUN apt-get remove -y curl gpg && \
    apt-get clean && apt-get autoremove -y && apt-get autopurge -y && \
    rm -rf /var/lib/apt/lists/* /var/log/*

COPY --from=runc /usr/local/sbin/runc /usr/local/sbin/runc
COPY --from=skopeo /usr/local/bin/skopeo /usr/local/bin/skopeo
COPY --from=skopeo /workspace/default-policy.json /etc/containers/policy.json
COPY --from=nvidia-container-toolkit /workspace/nvidia-container-runtime* /usr/bin/
COPY --from=worker /usr/local/bin/worker /usr/local/bin/worker
COPY --from=worker /usr/bin/mount-s3 /usr/bin/mount-s3
COPY ./sdk/src/beta9 /workspace/sdk

VOLUME "/usr/lib/x86_64-linux-gnu"