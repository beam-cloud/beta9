ARG BUILD_ENV=release

# Post-build stage (okteto)
FROM --platform=linux/x86_64 nvidia/cuda:12.2.0-base-ubuntu20.04 as build_okteto

ONBUILD COPY .secrets /workspace/.secrets

# Post-build stage (release)
FROM --platform=linux/x86_64 nvidia/cuda:12.2.0-base-ubuntu20.04 as build_release

WORKDIR /workspace

# The first stage builds the worker & bootstrap executables
FROM --platform=linux/x86_64 golang:1.18 AS builder

ARG GITHUB_TOKEN
RUN echo "machine github.com login beam-cloud password ${GITHUB_TOKEN}" > ~/.netrc
ENV GOPRIVATE=github.com/beam-cloud/*

WORKDIR /workspace

COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .
RUN mkdir -p /workspace/bin
RUN go build -v -o /usr/local/bin/worker /workspace/cmd/worker/main.go

# Second stage configures the outer container
FROM build_${BUILD_ENV} as build

WORKDIR /workspace

ARG DEBIAN_FRONTEND=noninteractive
ARG GITHUB_TOKEN

RUN echo "machine github.com login beam-cloud password ${GITHUB_TOKEN}" > ~/.netrc

RUN rm /etc/apt/sources.list.d/cuda.list && apt-get update && apt-get install -y wget git curl \
    libseccomp-dev libsndfile1 libsndfile1-dev \
    libaio-dev asciidoc xmlto libzmq3-dev iptables \
    build-essential git libprotobuf-dev libprotobuf-c-dev \
    protobuf-c-compiler protobuf-compiler \
    pkg-config libbsd-dev iproute2 \
    libnftnl-dev libcap-dev libnet1-dev libnl-3-dev \
    python3 python3.8 python3-distutils python3-pip

COPY --from=golang:1.20 /usr/local/go/ /usr/local/go/
ENV PATH="/usr/local/go/bin:${PATH}"

# Build & install runc container runtime
RUN git clone https://github.com/slai-labs/runc.git && cd /workspace/runc && make && make install

# Build & install criu
RUN python3 -m pip install protobuf==3.19.0
RUN git clone https://github.com/checkpoint-restore/criu.git
RUN cd criu && make && make install

# Install nvidia container runtime
RUN curl -s -L https://nvidia.github.io/nvidia-container-runtime/gpgkey | \
    apt-key add -
RUN curl -s -L https://nvidia.github.io/nvidia-container-runtime/ubuntu20.04/nvidia-container-runtime.list | \
    tee /etc/apt/sources.list.d/nvidia-container-runtime.list
RUN  apt-get update && apt-get install -y nvidia-container-runtime fuse3 libfuse3-dev && \
    rm -rf /var/lib/apt/lists/*

# Build custom nvidia-container runtime hook
RUN git clone https://github.com/beam-cloud/nvidia-container-toolkit.git
RUN cd /workspace/nvidia-container-toolkit && make build && make binaries
RUN cp /workspace/nvidia-container-toolkit/nvidia-container-runtime* /usr/bin/

COPY --from=builder /usr/local/bin/worker /usr/local/bin/worker