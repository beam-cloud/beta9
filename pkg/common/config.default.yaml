clusterName: beta9
debugMode: false
database:
  postgres:
    host: postgresql.beta9
    port: 5432
    username: root
    password: password
    name: main
    timezone: UTC
  redis:
    mode: single
    addrs:
    - redis-master.beta9:6379
    password:
    enableTLS: false
    insecureSkipVerify: false
    dialTimeout: 3s
storage:
  mode: juicefs
  fsName: beta9-fs
  fsPath: /data
  objectPath: /data/objects
  juicefs:
    redisURI: redis://juicefs-redis-master.beta9:6379/0
    awsS3Bucket: http://localstack.beta9:4566/juicefs
    awsAccessKey: test
    awsSecretKey: test
    blockSize: 4096
    cacheSize: 0
    prefetch: 1
    bufferSize: 300
gateway:
  host: beta9-gateway.beta9
  externalURL: http://localhost:1994
  grpc:
    port: 1993
    maxRecvMsgSize: 1024
    maxSendMsgSize: 1024
  http:
    port: 1994
    enablePrettyLogs: true
    cors:
      allowOrigins: "*"
      allowHeaders: "*"
      allowMethods: "*"
  shutdownTimeout: 180s
imageService:
  cacheURL:
  localCacheEnabled: true
  registryStore: local
  registryCredentialProvider: docker
  buildContainerPoolSelector: build
  registries:
    docker:
      username: beamcloud
      password:
    s3:
      bucketName: beta9-images
      region: us-east-1
      accessKey: test
      secretKey: test
      endpoint:
  runner:
    baseImageTag: latest
    baseImageName: beta9-runner
    baseImageRegistry: registry.localhost:5000
    tags:
      python3.8: py38-latest
      python3.9: py39-latest
      python3.10: py310-latest
      python3.11: py311-latest
      python3.12: py312-latest
worker:
  pools:
    default:
      mode: local
      jobSpec:
        nodeSelector: {}
      poolSizing:
        defaultWorkerCpu: 1000m
        defaultWorkerGpuType: ""
        defaultWorkerMemory: 1Gi
        minFreeCpu: 1000m
        minFreeGpu: 0
        minFreeMemory: 1Gi
    build:
      mode: local
      requiresPoolSelector: true
      jobSpec:
        nodeSelector: {}
      poolSizing:
        defaultWorkerCpu: 8000m
        defaultWorkerGpuType: ""
        defaultWorkerMemory: 32Gi
        minFreeCpu: 8000m
        minFreeGpu: 0
        minFreeMemory: 32Gi
    # example gpu worker pool
    # nvidia:
    #   gpuType: A40
    #   runtime: nvidia
    #   jobSpec:
    #     nodeSelector: {}
    #   poolSizing:
    #     defaultWorkerCpu: 1000m
    #     defaultWorkerGpuType: ""
    #     defaultWorkerMemory: 1Gi
    #     minFreeCpu:
    #     minFreeGpu:
    #     minFreeMemory:
  # global pool attributes
  hostNetwork: false
  imageTag: latest
  imageName: beta9-worker
  imageRegistry: registry.localhost:5000
  imagePullSecrets: []
  namespace: beta9
  serviceAccountName: default
  # non-standard k8s job spec
  imagePVCName: beta9-images
  resourcesEnforced: false
  defaultWorkerCPURequest: 2000
  defaultWorkerMemoryRequest: 1024
  terminationGracePeriod: 30
  addWorkerTimeout: 10m
providers:
  ec2:
    accessKey:
    secretkey:
    region: us-east-1
    # If you want workers nodes to land in your default vpc, you can omit subnetId
    subnetId:
    ami: ami-052c704a7f82c38b1
tailscale:
  controlUrl:
  user: beta9
  authKey:
  enabled: false
  debug: false
  hostName: headscale.internal
proxy:
  httpPort: 1989
  services:
  - name: redis
    localPort: 6379
    destination: redis-master.beta9:6379
  - name: juicefs-redis
    localPort: 6380
    destination: juicefs-redis-master.beta9:6379
  - name: gateway-http
    localPort: 1994
    destination: beta9-gateway.beta9:1994
  - name: gateway-grpc
    localPort: 1993
    destination: beta9-gateway.beta9:1993
monitoring:
  metricsCollector: prometheus
  prometheus:
    scrapeWorkers: true
    port: 9090
  fluentbit:
    events:
      endpoint: http://fluent-bit.beta9:9880
      maxConns: 0
      maxIdleConns: 30
      idleConnTimeout: 10s
      dialTimeout: 2s
      keepAlive: 30s
  openmeter:
    serverUrl: ""
    apiKey: ""
