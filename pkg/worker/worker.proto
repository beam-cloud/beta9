syntax = "proto3";

option go_package = "github.com/beam-cloud/beta9/proto";

import "gateway.proto";

package runc;

service RunCService {
  rpc RunCKill(RunCKillRequest) returns (RunCKillResponse) {}
  rpc RunCStatus(RunCStatusRequest) returns (RunCStatusResponse) {}
  rpc RunCExec(RunCExecRequest) returns (RunCExecResponse) {}
  rpc RunCStreamLogs(RunCStreamLogsRequest) returns (stream RunCLogEntry) {}
  rpc RunCArchive(RunCArchiveRequest) returns (stream RunCArchiveResponse) {}
  rpc RunCSyncWorkspace(gateway.SyncContainerWorkspaceRequest)
      returns (gateway.SyncContainerWorkspaceResponse) {}
  rpc RunCSandboxExec(RunCSandboxExecRequest)
      returns (RunCSandboxExecResponse) {}
}

message RunCKillRequest { string container_id = 1; }

message RunCKillResponse { bool ok = 1; }

message RunCExecRequest {
  string container_id = 1;
  string cmd = 2;
  repeated string env = 3;
}

message RunCExecResponse { bool ok = 1; }

message RunCStatusRequest { string container_id = 1; }

message RunCStatusResponse { bool running = 1; }

message RunCStreamLogsRequest { string container_id = 1; }

message RunCLogEntry { string msg = 1; }

message RunCArchiveRequest {
  string container_id = 1;
  string image_id = 2;
}

message RunCArchiveResponse {
  bool done = 1;
  bool success = 2;
  int32 progress = 3;
  string error_msg = 4;
}

message RunCSandboxExecRequest {
  string container_id = 1;
  string cmd = 2;
  repeated string env = 3;

  // Exec mode options - exactly one should be true
  bool get_pid = 4;     // Returns immediately with PID
  bool blocking = 5;    // Waits for completion and returns output
  bool interactive = 6; // Sets up interactive IO streams

  // For interactive mode
  bytes stdin = 7; // Only used in interactive mode
}

message RunCSandboxExecResponse {
  bool ok = 1;
  string error_msg = 2;
  int32 pid = 3;
}
