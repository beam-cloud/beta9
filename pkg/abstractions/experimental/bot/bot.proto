syntax = "proto3";

option go_package = "github.com/beam-cloud/beta9/proto";

package bot;

service BotService {
  rpc PopBotTask(PopBotTaskRequest) returns (PopBotTaskResponse) {}
  rpc PushBotMarkers(PushBotMarkersRequest) returns (PushBotMarkersResponse) {}
  rpc PushBotEvent(PushBotEventRequest) returns (PushBotEventResponse) {}
  rpc PushBotEventBlocking(PushBotEventBlockingRequest)
      returns (PushBotEventBlockingResponse) {}
}

message PopBotTaskRequest {
  string stub_id = 1;
  string session_id = 2;
  string transition_name = 3;
  string task_id = 4;
}

message PopBotTaskResponse {
  bool ok = 1;
  map<string, MarkerList> markers = 2;
  message MarkerList { repeated Marker markers = 1; }
}

message MarkerField {
  string field_name = 1;
  string field_value = 2;
}

message Marker {
  string location_name = 1;
  repeated MarkerField fields = 2;
  string source_task_id = 3;
}

message PushBotMarkersRequest {
  string stub_id = 1;
  string session_id = 2;
  map<string, MarkerList> markers = 3;
  message MarkerList { repeated Marker markers = 4; }
  string source_task_id = 5;
}

message PushBotMarkersResponse { bool ok = 1; }

message PushBotEventRequest {
  string stub_id = 1;
  string session_id = 2;
  string event_type = 3;
  string event_value = 4;
  map<string, string> metadata = 5;
}

message PushBotEventResponse {
  bool ok = 1;
  string event_id = 2;
}

message PushBotEventBlockingRequest {
  string stub_id = 1;
  string session_id = 2;
  string event_type = 3;
  string event_value = 4;
  map<string, string> metadata = 5;
  int32 timeout_seconds = 6;
}

message PushBotEventBlockingResponse {
  bool ok = 1;
  BotEvent event = 2;
}

message BotEvent {
  string type = 1;
  string value = 2;
  map<string, string> metadata = 3;
}